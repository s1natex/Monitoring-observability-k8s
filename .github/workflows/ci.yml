name: ci

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
  workflow_dispatch:

permissions:
  contents: write    # needed to push [skip-ci] manifest update

env:
  DOCKERHUB_REPO: s1natex/monitoring-observability-k8s
  FRONTEND_SVC: frontend-traffic
  ERRORS_SVC: api-errors
  LATENCY_SVC: api-latency

jobs:
  test-build-smoke-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Compute Israel time & release tag ----------
      - name: Compute release tag (Asia/Jerusalem)
        run: |
          echo "DATEISR=$(TZ=Asia/Jerusalem date +'%Y%m%d-%H%M')" >> $GITHUB_ENV
          echo "SHORTSHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${DATEISR}-${SHORTSHA}" >> $GITHUB_ENV
          echo "RELEASE_TAG=$RELEASE_TAG"

      # ---------- Python deps & Unit tests ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dev deps
        run: |
          python -m pip install -U pip
          if [ -f app/requirements-dev.txt ]; then
            python -m pip install -r app/requirements-dev.txt
          else
            python -m pip install fastapi==0.115.2 uvicorn==0.30.6 prometheus_client==0.20.0 pytest httpx requests
          fi

      - name: Run unit tests
        working-directory: app
        run: |
          python -m pytest -q

      # ---------- Docker & Compose smoke ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compose up (build & run)
        working-directory: app
        run: |
          docker compose up -d --build
          # simple waits to let services boot
          for p in 8080 8081 8082; do
            for i in $(seq 1 30); do
              curl -fsS "http://localhost:${p}/healthz" && break || sleep 2
            done
          done

      - name: Run smoke tests
        working-directory: app
        run: |
          python -m pytest -q tests/service-frontend-traffic/test_smoke_frontend_traffic.py \
                             tests/service-api-errors/test_smoke_api_errors.py \
                             tests/service-api-latency/test_smoke_api_latency.py

      - name: Compose down
        if: always()
        working-directory: app
        run: docker compose down -v

      # ---------- Build once, retag, push ----------
      - name: Build images (cached) for final tags
        run: |
          # Build all images (cache from previous compose build will speed this up)
          docker build -t ${DOCKERHUB_REPO}:${FRONTEND_SVC}-${RELEASE_TAG} ./app/service-frontend-traffic
          docker build -t ${DOCKERHUB_REPO}:${ERRORS_SVC}-${RELEASE_TAG}   ./app/service-api-errors
          docker build -t ${DOCKERHUB_REPO}:${LATENCY_SVC}-${RELEASE_TAG}  ./app/service-api-latency

      - name: Push images
        run: |
          docker push ${DOCKERHUB_REPO}:${FRONTEND_SVC}-${RELEASE_TAG}
          docker push ${DOCKERHUB_REPO}:${ERRORS_SVC}-${RELEASE_TAG}
          docker push ${DOCKERHUB_REPO}:${LATENCY_SVC}-${RELEASE_TAG}

      # ---------- Update manifests and commit [skip-ci] ----------
      - name: Update K8s image tags
        run: |
          set -euo pipefail
          sed -i "s#${DOCKERHUB_REPO}:frontend-traffic-[^[:space:]]\+#${DOCKERHUB_REPO}:${FRONTEND_SVC}-${RELEASE_TAG}#g" k8s/apps/deployments.yaml
          sed -i "s#${DOCKERHUB_REPO}:api-errors-[^[:space:]]\+#${DOCKERHUB_REPO}:${ERRORS_SVC}-${RELEASE_TAG}#g"       k8s/apps/deployments.yaml
          sed -i "s#${DOCKERHUB_REPO}:api-latency-[^[:space:]]\+#${DOCKERHUB_REPO}:${LATENCY_SVC}-${RELEASE_TAG}#g"      k8s/apps/deployments.yaml
          git status --porcelain

      - name: Commit manifest changes [skip-ci]
        if: ${{ !cancelled() }}
        run: |
          if ! git diff --quiet; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add k8s/apps/deployments.yaml
            git commit -m "[skip-ci] Update image tags to ${RELEASE_TAG}"
            git push
          else
            echo "No manifest changes to commit."
          fi
